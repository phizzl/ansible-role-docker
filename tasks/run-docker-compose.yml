---
- set_fact:
    git_defaults:
      accept_hostkey: yes
    docker_compose_templates: []
    docker_compose_files: []
    docker_compose_files_changed: no
    docker_compose_generated_filename: "{{ docker.definition_filename | default('docker-compose-generated.yml') }}"
    docker_compose_generated_filepath: "{{ docker_compose_generated_filepath }}"
    slurp_docker_compose_generated:
      content: ''
    slurp_docker_compose_generated_new:
      content: ''

- name: Create destination directory
  file:
    path: "{{ docker.dest }}"
    state: directory

- name: Get docker-compose setup from Git
  git: "{{ git_defaults | combine(docker.git) }}"
  when: docker.git is defined

- name: Fetch stats of generated docker compose file
  stat:
    path: "{{ docker_compose_generated_filepath }}"
  register: stat_docker_compose_generated

- name: Fetch slurp of generated docker compose file
  slurp:
    src: "{{ docker_compose_generated_filepath }}"
  register: slurp_docker_compose_generated
  when: stat_docker_compose_generated.stat.exists == True

- name: Removing generated docker-compose file if exists
  file:
    path: "{{ docker_compose_generated_filepath }}"
    state: absent
  when: stat_docker_compose_generated.stat.exists == True

- name: Generate docker-compose from YAML definition
  lineinfile:
    path: "{{ docker_compose_generated_filepath }}"
    create: true
    state: present
    line: "{{ docker.definition | to_yaml }}"
  when: docker.definition is defined

- name: Prepare to use generated docker-compose file
  set_fact:
    docker_compose_files:
      - "{{ docker_compose_generated_filename }}"
  when: docker.definition is defined

- name: Determine templates to copy to compose setup
  set_fact:
    compose_templates: "{{ docker_compose_templates }} + [ { 'src': '{{ item.src }}', 'dest': '{{ docker.dest  }}/{{ item.dest }}' } ]"
  loop: "{{ docker.templates | default([]) }}"

- name: Create template directories if not exist
  file:
    path: "{{ docker.dest }}/{{ item.dest | dirname }}"
    state: directory
  loop: "{{ docker_compose_templates }}"

- name: Copy templates to setup if configured
  template: "{{ item }}"
  loop: "{{ docker_compose_templates }}"

- name: Configure docker volumes
  docker_volume: "{{ item }}"
  loop: "{{ docker.volumes | default([]) }}"

- name: Execute pre commands
  shell: "{{ item }}"
  args:
    chdir: "{{ docker.dest }}"
  environment:
    SETUP_STATE: "{{ docker.state | default('present') }}"
  loop: "{{ docker.pre_commands | default([]) }}"

- name: Fetch stats of new generated compose file
  stat:
    path: "{{ docker_compose_generated_filepath }}"
  register: stat_docker_compose_generated_new

- name: Fetch slurp of new generated compose file
  slurp:
    src: "{{ docker_compose_generated_filepath }}"
  register: slurp_docker_compose_generated_new
  when: stat_docker_compose_generated_new.stat.exists == True

- name: Check if docker-compose setup has changed
  set_fact:
    docker_compose_files_changed: yes
  when: (stat_docker_compose_generated_new.stat.exists != stat_docker_compose_generated.stat.exists) or (slurp_docker_compose_generated_new.content != slurp_docker_compose_generated.content)

- name: Running docker-compose
  docker_compose:
    project_src: "{{ docker.dest }}"
    state: "{{ docker.state is defined and docker.state == \"stopped\" ? 'present' : docker.state | default('present') }}"
    restarted: "{{ docker_compose_files_changed }}"
    stopped: "{{ docker.state is defined and docker.state == \"stopped\" ? 'yes' : 'no' }}"
    files: "{{ docker.files | default([\"docker-compose.yml\"]) + generated_compose }}"
    build: "{{ docker.build | default('no') }}"

- name: Execute post commands
  shell: "{{ item }}"
  args:
    chdir: "{{ docker.dest }}"
  loop: "{{ docker.post_commands | default([]) }}"
  environment:
    SETUP_STATE: "{{ docker.state | default('present') }}"
