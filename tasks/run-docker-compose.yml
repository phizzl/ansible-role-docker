---
- name: Create destination directory
  file:
    path: "{{ compose.dest }}"
    state: directory
    owner: "{{ docker_user }}"

- name: Checkout docker setup
  git:
    repo: "{{ compose.repo }}"
    dest: "{{ compose.dest }}"
    accept_hostkey: "{{ compose.accept_hostkey| default('yes') }}"
    version: "{{ compose.version | default('HEAD') }}"
    key_file: "{{ compose.key_file |default('') }}"
  when: compose.repo is defined and compose.repo != ""
  become_user: "{{ docker_user }}"

- name: Setting directory permission
  file:
    path: "{{ compose.dest }}"
    state: directory
    owner: "{{ docker_user }}"
    recurse: true
  when: compose.repo is defined and compose.repo != ""

- name: Create docker-compose YAML depending from inline config
  lineinfile:
    path: "{{ compose.dest }}/docker-compose-inline-generated.yml"
    create: true
    state: present
    line: "{{ compose.inline }}"
    owner: "{{ docker_user }}"
  when: compose.inline is defined and compose.inline != ""

- name: Append docker-compose config when inline script is given
  set_fact:
    generated_compose:
      - "{{ compose.dest }}/docker-compose-inline-generated.yml"
  when: compose.inline is defined and compose.inline != ""

- name: Execute pre-script
  shell: "{{ compose.pre_script }}"
  args:
    chdir: "{{ compose.dest }}"
  when: compose.pre_script is defined
  become_user: "{{ docker_user }}"

- name: Running docker-compose
  docker_compose:
    project_src: "{{ compose.dest }}"
    state: "{{ compose.state | default('present') }}"
    files: "{{ compose.files | default([]) + generated_compose }}"
    build: "{{ compose.build | default('no') }}"
  become_user: "{{ docker_user }}"

- name: Execute post-script
  shell: "{{ compose.post_script }}"
  args:
    chdir: "{{ compose.dest }}"
  when: compose.post_script is defined
  become_user: "{{ docker_user }}"
