---
- name: Applying default configs to definition
  set_fact:
    docker: "{{ docker_compose_item_defaults | combine(docker_compose_item) }}"

- name: Setting facts for processing role
  set_fact:
    compose_templates: []
    compose_copies: []
    compose_files: []
    compose_lineinfiles: []
    compose_replaces: []
    compose_definition_files: []
    compose_definition_files_changed: no
    compose_restarted: "{{ docker.restarted }}"
    compose_generated_filepath: "{{ docker.dest }}/{{ docker.definition_filename }}"

- name: Create destination directory
  file:
    path: "{{ docker.dest }}"
    state: directory

- name: Get docker-compose setup from Git
  git: "{{ docker.git | combine({\"dest\": docker.dest}) }}"
  when: docker.git.repo is defined

- name: Fetch stats of previously generated docker compose file
  stat:
    path: "{{ compose_generated_filepath }}"
  register: stat_prev_compose_generated

- name: Fetch slurp of previously generated docker compose file
  slurp:
    src: "{{ compose_generated_filepath }}"
  register: slurp_prev_compose_generated
  when: stat_prev_compose_generated.stat.exists

- name: Removing previously generated docker-compose file if it exists
  file:
    path: "{{ compose_generated_filepath }}"
    state: absent
  when: stat_prev_compose_generated.stat.exists

- name: Generate docker-compose from YAML definition
  lineinfile:
    path: "{{ compose_generated_filepath }}"
    create: true
    state: present
    line: "{{ docker.definition|to_nice_yaml if docker.definition is mapping else docker.definition|string }}"
  when: docker.definition is defined

- name: Prepare to use generated docker-compose file
  set_fact:
    compose_definition_files:
      - "{{ docker.definition_filename }}"
  when: docker.definition is defined

- name: Prepend docker-compose.yml as default
  set_fact:
    compose_definition_files: "{{ docker.compose_files }} + {{ compose_definition_files }}"
  when: docker.compose_files is defined

- name: Running file based operations
  include_tasks: file-operations.yml

- name: Running docker based operations before actual docker-compose
  include_tasks: docker-operations.yml

- name: Fetch stats of next generated compose file
  stat:
    path: "{{ compose_generated_filepath }}"
  register: stat_next_compose_generated

- name: Fetch slurp of new generated compose file
  slurp:
    src: "{{ compose_generated_filepath }}"
  register: slurp_next_compose_generated
  when: stat_next_compose_generated.stat.exists

- name: Check if docker-compose setup has changed
  set_fact:
    compose_definition_files_changed: yes
  when: >
    (stat_next_compose_generated.stat.exists != stat_prev_compose_generated.stat.exists) or
    (
      (stat_next_compose_generated.stat.exists and stat_prev_compose_generated.stat.exists) and
      (slurp_next_compose_generated.content != slurp_prev_compose_generated.content)
    )

- name: Check if the docker-compose setup needs to be restarted
  set_fact:
    compose_restarted: yes
  when: >
    compose_definition_files_changed and docker.restart_on_change and
    (docker.stopped is not defined or docker.stopped == false)

- name: Execute pre commands
  shell: "{{ item }}"
  args:
    chdir: "{{ docker.dest }}"
  environment:
    SETUP_STATE: "{{ docker.state }}"
    SETUP_CHANGED: "{{ '1' if compose_definition_files_changed else '0' }}"
    SETUP_RESTARTED: "{{ '1' if compose_restarted else '0' }}"
    SETUP_STOPPED: "{{ '1' if docker.stopped else '0' }}"
  loop: "{{ docker.pre_commands }}"

- name: Running docker-compose
  docker_compose:
    project_name: "{{ docker.project_name | default(omit) }}"
    project_src: "{{ docker.dest }}"
    state: "{{ docker.state }}"
    restarted: "{{ compose_restarted }}"
    stopped: "{{ docker.stopped }}"
    files: "{{ [\"docker-compose.yml\"] if compose_definition_files|length < 1 else compose_definition_files }}"
    build: "{{ docker.build }}"
    pull: "{{ docker.pull }}"
    recreate: "{{ docker.recreate }}"
    scale: "{{ docker.scale }}"

- name: Execute post commands
  shell: "{{ item }}"
  args:
    chdir: "{{ docker.dest }}"
  loop: "{{ docker.post_commands }}"
  environment:
    SETUP_STATE: "{{ docker.state }}"
    SETUP_CHANGED: "{{ '1' if compose_definition_files_changed else '0' }}"
    SETUP_RESTARTED: "{{ '1' if compose_restarted else '0' }}"
    SETUP_STOPPED: "{{ '1' if docker.stopped else '0' }}"
